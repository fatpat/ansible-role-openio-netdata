#jinja2: lstrip_blocks: True
# {{ ansible_managed }}
# NetData Configuration
# https://docs.netdata.cloud/daemon/config/#global-section-options
[global]
  run as user = openio
{% if openio_netdata_bind_address | length > 0 %}
  bind socket to IP = {{ openio_netdata_bind_address }}
{% endif %}
  default port = {{ openio_netdata_bind_port }}
  update every = {{ openio_netdata_global_update_every }}
  config directory = {{ openio_service_conf_dir }}
  log directory = {{ openio_service_log_dir }}
  cache directory = {{ openio_service_volume }}
  home directory = {{ openio_service_volume }}
  web files directory = /usr/share/oio-netdata/web
  debug log = none
  access log = none
  error log = syslog
  facility log = local7
  
# https://docs.netdata.cloud/web/server/
[web]
  web files owner = root
  web files group = openio

# https://docs.netdata.cloud/daemon/config/#plugins-section-options
[plugins]
  enable running new plugins = no
  # internal plugins
  cgroups = no
  checks = no
  diskspace = yes
  idlejitter = no
  proc = yes
  slabinfo = no
  stats.d = no
  tc = no
  xenstat = no
  # external plugins
  apps = yes
  charts.d = no
  cups = no
  ebpf_process = no
  fping = no
  freeipmi = no
  go.d = no
  ioping = no
  nfacct = no
  node.d = no
  perf = no
  pythond.d = no

[statsd]
  enabled = no

[exporting:global]
  enabled = no

# https://docs.netdata.cloud/daemon/config/#health-section-options
[health]
  enabled = no

# https://docs.netdata.cloud/registry/
[registry]
  enabled = no

# https://docs.netdata.cloud/streaming/
[backend]
  enabled = no
  hostname = {{ ansible_hostname }}
  send charts matching =  *apps* *disk* *ipv4.errors* *ipv4.tcpsock* *ipv4.tcppackets* *ipv4.tcperrors* *ipv4.packets* *ipv4.tcphandshake* *ipv4.udppackets* *mem.committed* *net_drops* *net_packets* *net.* *system.ctxt* *system.cpu* *system.ram* *system.io* *system.processes* *system.load* *system.uptime* *system.forks*

[stream]
  enabled = no

{% set ipv6_charts = ['icmp', 'icmprouter', 'icmpneighbor', 'icmpmldv2', 'icmptypes', 'packets', 'ect', 'sockstat6_tcp_sockets', 'sockstat6_udp_sockets', 'mcast', 'mcastpkts'] %}
{% for t in ipv6_charts %}
[ipv6.{{ t }}]
  enabled = no
{% endfor %}

{% set users_groups_charts = ['cpu', 'preads', 'pwrites', 'lreads', 'lwrites', 'files', 'mem', 'vmem', 'minor_faults', 'major_faults', 'threads', 'processes', 'uptime', 'uptime_min', 'uptime_avg', 'uptime_max', 'pipe', 'swap', 'sockets'] %}
{% for t in users_groups_charts %}
[groups.{{ t }}]
  enabled = no
[users.{{ t }}]
  enabled = no
{% endfor %}

[plugin:proc:diskspace]
  exclude space metrics on filesystems = tmpfs devtmpfs
